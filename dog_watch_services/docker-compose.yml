version: '3.7'
services:
  rabbitmq:
    image: rabbitmq:management
    command: rabbitmq-server
    restart: always
    ports:
     - 15672:15672
    networks:
      - dog_watch_network

  message_coordinator:
    image: message_coordinator
    build:
      context: ./
      dockerfile: Dockerfile_message_coordinator
    networks:
     - dog_watch_network
    restart: always
    env_file:
      - ./message_coordinator/.env
    depends_on:
     - rabbitmq

  dog_detector:
    image: dog_detector
    build:
      context: ./
      dockerfile: Dockerfile_dog_detector
    networks:
     - dog_watch_network
    restart: always
    devices:
     - "/dev/gpiomem:/dev/gpiomem"
    env_file:
      - ./dog_detector/.env
    depends_on:
     - message_coordinator

  web_server:
    build:
      context: ./
      dockerfile: Dockerfile_web_server
    image: server
    networks:
     - dog_watch_network
    volumes:
     - "/tmp/dog_watch/images/:/app/static"
    restart: always
    env_file:
      - ./web_server/.env
    ports:
     - 5000:5000
    depends_on:
     - message_coordinator

  camera_service:
    build:
      context: ./
      dockerfile: Dockerfile_camera_service
    image: camera_service
    privileged: true
    group_add:
     - video
    env_file:
      - ./camera_service/.env
    volumes:
     - /opt/vc:/opt/vc
     - /run/udev:/run/udev:ro
     - "/tmp/dog_watch/images/:/images/"
    devices:
     - "/dev/vchiq:/dev/vchiq"
    networks:
     - dog_watch_network
    restart: always
    depends_on:
     - message_coordinator
networks:
  dog_watch_network:

